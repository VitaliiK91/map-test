// Generated by CoffeeScript 1.5.0
(function() {
  var app;

  app = angular.module('mapApp', ['google-maps']);

  app.service('sharedProperties', function() {
    var props;
    props = {
      start: -1,
      end: -1,
      markers: []
    };
    return {
      Properties: function() {
        return props;
      },
      setStart: function(val) {
        return props.start = val;
      },
      setEnd: function(val) {
        return props.end = val;
      },
      setMarkers: function(val) {
        return props.markers = val;
      }
    };
  });

  app.controller('infoController', [
    '$scope', 'sharedProperties', function($scope, sharedProperties) {
      $scope.onStartClick = function() {
        return sharedProperties.setStart($scope.model.id);
      };
      return $scope.onEndClick = function() {
        return sharedProperties.setEnd($scope.model.id);
      };
    }
  ]);

  app.controller('mapController', [
    '$scope', 'sharedProperties', function($scope, sharedProperties) {
      var i, latlng, latlngs, marker, _i, _len;
      $scope.markers = [];
      $scope.map = {
        'center': {
          'latitude': 33.884388,
          'longitude': -117.641235
        },
        'zoom': 12
      };
      $scope.local = sharedProperties.Properties();
      $scope.logIt = function() {
        return console.log("Selected");
      };
      $scope.prevIcon = '';
      latlngs = [];
      latlngs.push({
        'latitude': 33.884780,
        'longitude': -117.639754
      });
      latlngs.push({
        'latitude': 33.884388,
        'longitude': -117.641235
      });
      latlngs.push({
        'latitude': 33.883924,
        'longitude': -117.643724
      });
      for (i = _i = 0, _len = latlngs.length; _i < _len; i = ++_i) {
        latlng = latlngs[i];
        marker = {};
        marker.start = null;
        marker.end = null;
        marker.latitude = latlng.latitude;
        marker.longitude = latlng.longitude;
        marker.id = i;
        marker.status = 'inactive';
        marker.icon = "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-66c547/shapecolor-light/shadow-1/border-white/symbolstyle-dark/symbolshadowstyle-no/gradient-no/bridge_old.png";
        marker.showWindow = false;
        marker.close = function() {
          this.model.icon = $scope.prevIcon;
          this.model.showWindow = false;
          return $scope.$apply();
        };
        marker.onClick = function() {
          var markerr, _j, _len1, _ref;
          $scope.prevIcon = this.model.icon;
          this.model.icon = "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-facd1b/shapecolor-light/shadow-1/border-white/symbolstyle-dark/symbolshadowstyle-no/gradient-no/tollstation.png";
          _ref = $scope.local.markers;
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            markerr = _ref[_j];
            markerr.showWindow = false;
          }
          this.model.showWindow = true;
          $scope.id = this.model.id;
          return $scope.$apply();
        };
        $scope.local.markers.push(marker);
      }
      $scope.$watch('local.start', function() {
        var markers, _j, _len1;
        if ($scope.local.start === -1) {
          return;
        }
        console.log("Start changed.");
        markers = sharedProperties.Properties().markers;
        for (_j = 0, _len1 = markers.length; _j < _len1; _j++) {
          marker = markers[_j];
          if (marker.status === "start") {
            marker.icon = "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-66c547/shapecolor-light/shadow-1/border-white/symbolstyle-dark/symbolshadowstyle-no/gradient-no/bridge_old.png";
            marker.status = "inactive";
          }
        }
        sharedProperties.setMarkers = markers;
        $scope.local.markers[$scope.local.start].status = "start";
        return $scope.prevIcon = $scope.local.markers[$scope.local.start].icon = "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-262626/shapecolor-white/shadow-1/border-color/symbolstyle-color/symbolshadowstyle-no/gradient-no/bridge_old.png";
      });
      return $scope.$watch('local.end', function() {
        var markers, _j, _len1;
        if ($scope.local.end === -1) {
          return;
        }
        console.log("End changed");
        markers = sharedProperties.Properties().markers;
        for (_j = 0, _len1 = markers.length; _j < _len1; _j++) {
          marker = markers[_j];
          if (marker.status === "end") {
            marker.icon = "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-66c547/shapecolor-light/shadow-1/border-white/symbolstyle-dark/symbolshadowstyle-no/gradient-no/bridge_old.png";
            marker.status = "inactive";
          }
        }
        sharedProperties.setMarkers = markers;
        $scope.local.markers[$scope.local.end].status = "end";
        return $scope.prevIcon = $scope.local.markers[$scope.local.end].icon = "http://mapicons.nicolasmollet.com/wp-content/uploads/mapicons/shape-default/color-262626/shapecolor-color/shadow-1/border-dark/symbolstyle-white/symbolshadowstyle-dark/gradient-no/bridge_old.png";
      });
    }
  ]);

}).call(this);
