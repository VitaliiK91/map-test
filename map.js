// Generated by CoffeeScript 1.7.1
var Marker, app;

Marker = (function() {
  function Marker(id, latitude, longitude) {
    this.id = id;
    this.latitude = latitude;
    this.longitude = longitude;
    this.start = null;
    this.end = null;
    this.icon = "/states/inactive.png";
    this.prevIcon = "/states/inactive.png";
    this.showWindow = false;
  }

  return Marker;

})();

app = angular.module('mapApp', ['google-maps', 'services']);

app.controller('infoController', [
  '$scope', 'sharedProperties', function($scope, sharedProperties) {
    $scope.onStartClick = function() {
      return sharedProperties.setStart($scope.model.id);
    };
    $scope.onEndClick = function() {
      return sharedProperties.setEnd($scope.model.id);
    };
    return $scope.onStreetViewClick = function() {
      var currentMarker, properties, streetMap;
      properties = sharedProperties.Properties();
      currentMarker = properties.markers[$scope.model.id];
      streetMap = properties.panorama;
      streetMap.setPosition(new google.maps.LatLng(currentMarker.latitude, currentMarker.longitude));
      return streetMap.setVisible(true);
    };
  }
]);

app.controller('mapController', [
  '$scope', 'sharedProperties', 'markerService', function($scope, sharedProperties, markerService) {
    var latlngs;
    $scope.markers = [];
    $scope.map = {
      'center': {
        'latitude': 33.884388,
        'longitude': -117.641235
      },
      'zoom': 12
    };
    $scope.streetView = {};
    $scope.local = sharedProperties.Properties();
    $scope.showTraffic = false;
    $scope.toggleTrafficLayer = function() {
      return $scope.showTraffic = !$scope.showTraffic;
    };
    latlngs = [];
    latlngs.push({
      'latitude': 33.843801,
      'longitude': -117.717234
    });
    latlngs.push({
      'latitude': 33.826690,
      'longitude': -117.716419
    });
    latlngs.push({
      'latitude': 33.820415,
      'longitude': -117.716977
    });
    latlngs.forEach(function(element, index) {
      var marker;
      marker = new Marker(index, element.latitude, element.longitude);
      marker.close = function() {
        markerService.setMarkerDefault(this.model);
        return $scope.$apply();
      };
      marker.onClick = function() {
        sharedProperties.setPanorama($scope.streetView);
        $scope.local.markers.forEach(function(element) {
          return markerService.setMarkerDefault(element);
        });
        markerService.setMarkerStatus(this.model, "focused");
        $scope.id = this.model.id;
        return $scope.$apply();
      };
      return $scope.local.markers.push(marker);
    });
    return $scope.$watchCollection('local.route', function(newValues, oldValues, scope) {
      var endId, markers, startId;
      startId = newValues.start;
      endId = newValues.end;
      if ((startId === -1) && (endId === -1) || (startId === endId)) {
        return;
      }
      markers = sharedProperties.Properties().markers;
      markers.forEach(function(marker) {
        if (marker.status === "start" || marker.status === "end") {
          return markerService.setMarkerStatus(marker, "inactive");
        }
      });
      sharedProperties.setMarkers(markers);
      markerService.setMarkerStatus(markers[startId], 'start');
      return markerService.setMarkerStatus(markers[endId], 'end');
    });
  }
]);
