// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

angular.module("google-maps.directives.api").factory("Markers", [
  "IMarker", "MarkersParentModel", "CtrlHandle", function(IMarker, MarkersParentModel, CtrlHandle) {
    var Markers;
    return Markers = (function(_super) {
      __extends(Markers, _super);

      function Markers($timeout) {
        this.link = __bind(this.link, this);
        var self;
        Markers.__super__.constructor.call(this, $timeout);
        this.template = '<span class="angular-google-map-markers" ng-transclude></span>';
        this.scope = _.extend(this.scope || {}, {
          idKey: '=idkey',
          doRebuildAll: '=dorebuildall',
          models: '=models',
          doCluster: '=docluster',
          clusterOptions: '=clusteroptions',
          clusterEvents: '=clusterevents',
          labelContent: '=labelcontent',
          labelAnchor: '@labelanchor',
          labelClass: '@labelclass'
        });
        this.$timeout = $timeout;
        self = this;
        this.$log.info(this);
      }

      Markers.prototype.controller = [
        '$scope', '$element', function($scope, $element) {
          $scope.ctrlType = 'Markers';
          return CtrlHandle.handle($scope, $element);
        }
      ];

      Markers.prototype.link = function(scope, element, attrs, ctrl) {
        return this.mapPromise(scope, ctrl).then((function(_this) {
          return function(map) {
            new MarkersParentModel(scope, element, attrs, map, _this.$timeout);
            return scope.deferred.resolve();
          };
        })(this));
      };

      return Markers;

    })(IMarker);
  }
]);
